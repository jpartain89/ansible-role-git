---

- name: First-steps_linux | main.yml | Install Python
  ansible.builtin.raw: test -e /usr/bin/python && echo "Exists" || (apt -y update && apt install -y python3)
  register: python_raw
  become: true
  changed_when: "'Exists' not in python_raw.stdout"
  tags: production

- name: First-steps_linux | Main.yml | Include Variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_architecture }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/default.yml"
  tags: production

- name: First-steps_linux | Main.yml | Ensure SSH Key is authorized
  ansible.posix.authorized_key:
    user: "{{ ansible_user_id }}"
    state: present
    key: "{{ first_steps_git_ssh.key }}"
  tags: production

- name: First-steps_linux | Main.yml | Import Task debian.yml
  ansible.builtin.import_tasks: debian.yml
  when: ansible_os_family == "Debian"
  become: true
  tags: production

- name: First-steps_linux | Main.yml | Run various scripts downloaded from the internet
  ansible.builtin.import_tasks: download_scripts_install.yml
  when: ansible_os_family == "Debian"
  become: true
  tags: production

- name: First-steps_linux | Main.yml | Run mount.yml
  ansible.builtin.import_tasks: mount.yml
  tags: production

# - name: First-steps_linux | Main.yml | Install Docker
#  ansible.builtin.import_tasks: install-docker.yml
#  when: ansible_facts['ansible_distribution'] != 'Raspbian' or
#    ansible_facts['ansible_lsb.id'] != 'Raspbian'
#  tags: docker
#
- name: First-steps_linux | Main.yml | Run it87 Commands on JPServer
  ansible.builtin.import_tasks: it87.yml
  when: ansible_hostname == "JPserver"
  become: true
