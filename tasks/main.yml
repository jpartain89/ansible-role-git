---


- name: Create local Tmp Files
  file:
    state: directory
    path: "/tmp/git/{{ item }}"
    mode: 0777
  loop:
    - "{{ ansible_facts['nodename'] }}"
  delegate_to: localhost
  become: true

- name: Install Git | Linux
  apt:
    name: "{{ git_apt_apps }}"
    state: present
    update_cache: true
    cache_valid_time: 86400
  become: true
  when: ansible_os_family == "Debian"

- name: Install Git | macOS
  homebrew:
    state: present
    name: git
  when: ansible_os_family == "Darwin"

- name: Install Git | Fedora
  dnf:
    name: "{{ git_dnf_apps }}"
    state: present
    update_cache: true
  when: ansible_os_family == "RedHat"
  become: true

- name: Confirm the Git Directory Exists
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0775
  with_items:
    - "{{ git_dir }}"

#- name: Clone git repos
#  git:
#    repo: "{{ git_device_cloning.repo }}"
#    dest: "{{ git_device_cloning.dest }}"
#    update: true
#    accept_hostkey: true
#    recursive: true
#  failed_when: false
#  become_user: "{{ ansible_user_id }}"

- name: Create Shell Script to clone git repos
  template:
    src: git_clone.j2
    dest: "/tmp/git/{{ item }}/git_clone.sh"
    mode: 0775
  loop:
    - "{{ ansible_facts['nodename'] }}"
  delegate_to: localhost
  register: _create_bash_script

- name: Debug Bash Script
  debug: var=_create_bash_script

- name: Run Created Bash Script
  script: /tmp/git/{{ ansible_facts['nodename'] }}/git_clone.sh
  register: _git_bash_script

- debug: var=_git_bash_script
